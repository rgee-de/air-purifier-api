<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9a90a512-769b-4c1d-898b-c46ba4b4a40c" name="Changes" comment="Update Jinja2 templates directory and add jinja2 to requirements&#10;&#10;Adjusted the directory path for Jinja2 templates in 'app/main.py' for correct file access. Also, added 'jinja2' to the 'requirements.txt' file ensuring the required package is installed during setup.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2ieVwmghg8fDpfyhFJguf9DX1C8" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;HTTP Request.test_main | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test_main | #2.executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.status_observe.executor&quot;: &quot;Debug&quot;,
    &quot;Python.websocket.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.editor&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Projekte\dev\air-purifier-api\app\services" />
      <recent name="C:\Projekte\dev\air-purifier-api\app" />
    </key>
  </component>
  <component name="RunManager" selected="Python.main">
    <configuration name="test_main | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/test_main.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="test_main | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/test_main.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="air-purifier-api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="HTTP Request.test_main | #1" />
      <item itemvalue="HTTP Request.test_main | #2" />
      <item itemvalue="Python.main" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.main" />
        <item itemvalue="HTTP Request.test_main | #2" />
        <item itemvalue="HTTP Request.test_main | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-09665e90c3a7-b11f5e8da5ad-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.15026.15" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task id="LOCAL-00001" summary="Update Dockerfile to a two-stage build and edit .gitignore&#10;&#10;The Dockerfile has been updated to a two-stage build process, firstly installing git and copying necessary files, and then ensuring these dependencies are available in the production image. This should make the construction process faster and the image lighter. Simultaneously, `.idea/` is no longer ignored, thus making all elements of JetBrains IDE configurations trackable.">
      <option name="closed" value="true" />
      <created>1719822846225</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1719822846225</updated>
    </task>
    <task id="LOCAL-00002" summary="Refactor main codebase to use environment variables&#10;&#10;This update refactors the main codebase and the status_observe utility to fetch the host IP from environmental variables instead of hardcoding it. This enhances flexibility and adaptability when changing deployment environments. Also, it introduced some changes to the API like replacing GET requests with POST for managing the modes and operations of the air purifier.">
      <option name="closed" value="true" />
      <created>1719846543265</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1719846543265</updated>
    </task>
    <task id="LOCAL-00003" summary="Added HOST_IP environment variable&#10;&#10;A new file .env was added, which contains the HOST_IP environment variable. This provides greater flexibility and adaptability by avoiding hardcoding the host IP, which may vary across different deployment environments.">
      <option name="closed" value="true" />
      <created>1719846570735</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1719846570735</updated>
    </task>
    <task id="LOCAL-00004" summary="Implement StatusModel and update status handling logic&#10;&#10;The StatusModel has been implemented to standardize the status response structure. Additionally, the method to update the latest status has been modified to enhance its decoding and data handling ability. The adjustments made will better manage received status data and handle any decoding errors more efficiently.">
      <option name="closed" value="true" />
      <created>1719848813467</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1719848813467</updated>
    </task>
    <task active="true" id="Default" summary="Default task">
      <changelist id="9a90a512-769b-4c1d-898b-c46ba4b4a40c" name="Changes" comment="Implement StatusModel and update status handling logic&#10;&#10;The StatusModel has been implemented to standardize the status response structure. Additionally, the method to update the latest status has been modified to enhance its decoding and data handling ability. The adjustments made will better manage received status data and handle any decoding errors more efficiently." />
      <created>1719851274378</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719851274378</updated>
      <workItem from="1719851280097" duration="542000" />
      <workItem from="1719858544988" duration="284000" />
      <workItem from="1719859120758" duration="4939000" />
      <workItem from="1720213145874" duration="3574000" />
      <workItem from="1720216965539" duration="26304000" />
      <workItem from="1720355886877" duration="262000" />
    </task>
    <task id="LOCAL-00005" summary="Add CORS middleware to FastAPI application&#10;&#10;CORS middleware has been added to the FastAPI application to handle Cross-Origin Resource Sharing. Also, the requirements.txt file has been updated, removing specific versions for libraries and adding 'fastapi-cors' package.">
      <option name="closed" value="true" />
      <created>1719859767280</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1719859767280</updated>
    </task>
    <task id="LOCAL-00006" summary="Updated CORS middleware settings in FastAPI application&#10;&#10;The &quot;allow_origins&quot; setting in the CORS middleware command has been updated from a wildcard (&quot;*&quot;) to a variable, 'origins'. This will allow for better security and control over which origins are permitted access.">
      <option name="closed" value="true" />
      <created>1719859918137</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1719859918137</updated>
    </task>
    <task id="LOCAL-00007" summary="Refactor CORS middleware to accept a specific origins list&#10;&#10;The CORS middleware &quot;allow_origins&quot; setting is no longer a wildcard (&quot;*&quot;) but instead accepts an 'origins' list. This change increases security and control by explicitly defining which origins are allowed access.">
      <option name="closed" value="true" />
      <created>1719860502857</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1719860502857</updated>
    </task>
    <task id="LOCAL-00008" summary="Implement more comprehensive status observation&#10;&#10;This revision contains a major overhaul to 'status_observe.py', redesigning the system to use logging and a class structure for better readability and functionality. Status information now includes a timestamp for added accuracy. 'requirements.txt' and the .env file have also been adjusted due to the addition of the datetime module and a mechanism for setting log level.">
      <option name="closed" value="true" />
      <created>1720267044288</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1720267044288</updated>
    </task>
    <task id="LOCAL-00009" summary="Refactor status observer for enhanced functionality and readability&#10;&#10;The changes include an extensive redesign of the script 'status_observe.py', applying a class structure and implementing logging to enhance code readability and functionality. Status information now incorporates a timestamp for greater accuracy. Adjustments were also made to 'requirements.txt' and the .env file, accounting for the addition of the datetime module and the inclusion of a configurable log level.">
      <option name="closed" value="true" />
      <created>1720346310362</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1720346310362</updated>
    </task>
    <task id="LOCAL-00010" summary="Add CORS configuration and dynamic WebSocket URL&#10;&#10;The commit includes the addition of CORS middleware configuration and dynamic WebSocket URL to the FastAPI application. These changes can be found in 'app/config.py', '.env', 'README.md' and 'app/main.py'. The WebSocket URL in the WebSocket example has also been updated to be dynamic, improving deployment flexibility.">
      <option name="closed" value="true" />
      <created>1720348662320</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1720348662320</updated>
    </task>
    <task id="LOCAL-00011" summary="Update Jinja2 templates directory and add jinja2 to requirements&#10;&#10;Adjusted the directory path for Jinja2 templates in 'app/main.py' for correct file access. Also, added 'jinja2' to the 'requirements.txt' file ensuring the required package is installed during setup.">
      <option name="closed" value="true" />
      <created>1720350960894</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1720350960894</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Simplify Dockerfile and remove unnecessary build steps&#10;&#10;The Dockerfile was simplified by removing multi-staging and some unnecessary build steps. The change should make the image lighter and construction process faster. The health check from the Dockerfile was also removed, and an unnecessary PowerShell script was deleted." />
    <MESSAGE value="Update Dockerfile to a two-stage build and edit .gitignore&#10;&#10;The Dockerfile has been updated to a two-stage build process, firstly installing git and copying necessary files, and then ensuring these dependencies are available in the production image. This should make the construction process faster and the image lighter. Simultaneously, `.idea/` is no longer ignored, thus making all elements of JetBrains IDE configurations trackable." />
    <MESSAGE value="Refactor main codebase to use environment variables&#10;&#10;This update refactors the main codebase and the status_observe utility to fetch the host IP from environmental variables instead of hardcoding it. This enhances flexibility and adaptability when changing deployment environments. Also, it introduced some changes to the API like replacing GET requests with POST for managing the modes and operations of the air purifier." />
    <MESSAGE value="Added HOST_IP environment variable&#10;&#10;A new file .env was added, which contains the HOST_IP environment variable. This provides greater flexibility and adaptability by avoiding hardcoding the host IP, which may vary across different deployment environments." />
    <MESSAGE value="Implement StatusModel and update status handling logic&#10;&#10;The StatusModel has been implemented to standardize the status response structure. Additionally, the method to update the latest status has been modified to enhance its decoding and data handling ability. The adjustments made will better manage received status data and handle any decoding errors more efficiently." />
    <MESSAGE value="Add CORS middleware to FastAPI application&#10;&#10;CORS middleware has been added to the FastAPI application to handle Cross-Origin Resource Sharing. Also, the requirements.txt file has been updated, removing specific versions for libraries and adding 'fastapi-cors' package." />
    <MESSAGE value="Updated CORS middleware settings in FastAPI application&#10;&#10;The &quot;allow_origins&quot; setting in the CORS middleware command has been updated from a wildcard (&quot;*&quot;) to a variable, 'origins'. This will allow for better security and control over which origins are permitted access." />
    <MESSAGE value="Refactor CORS middleware to accept a specific origins list&#10;&#10;The CORS middleware &quot;allow_origins&quot; setting is no longer a wildcard (&quot;*&quot;) but instead accepts an 'origins' list. This change increases security and control by explicitly defining which origins are allowed access." />
    <MESSAGE value="Implement more comprehensive status observation&#10;&#10;This revision contains a major overhaul to 'status_observe.py', redesigning the system to use logging and a class structure for better readability and functionality. Status information now includes a timestamp for added accuracy. 'requirements.txt' and the .env file have also been adjusted due to the addition of the datetime module and a mechanism for setting log level." />
    <MESSAGE value="Refactor status observer for enhanced functionality and readability&#10;&#10;The changes include an extensive redesign of the script 'status_observe.py', applying a class structure and implementing logging to enhance code readability and functionality. Status information now incorporates a timestamp for greater accuracy. Adjustments were also made to 'requirements.txt' and the .env file, accounting for the addition of the datetime module and the inclusion of a configurable log level." />
    <MESSAGE value="Add CORS configuration and dynamic WebSocket URL&#10;&#10;The commit includes the addition of CORS middleware configuration and dynamic WebSocket URL to the FastAPI application. These changes can be found in 'app/config.py', '.env', 'README.md' and 'app/main.py'. The WebSocket URL in the WebSocket example has also been updated to be dynamic, improving deployment flexibility." />
    <MESSAGE value="Update Jinja2 templates directory and add jinja2 to requirements&#10;&#10;Adjusted the directory path for Jinja2 templates in 'app/main.py' for correct file access. Also, added 'jinja2' to the 'requirements.txt' file ensuring the required package is installed during setup." />
    <option name="LAST_COMMIT_MESSAGE" value="Update Jinja2 templates directory and add jinja2 to requirements&#10;&#10;Adjusted the directory path for Jinja2 templates in 'app/main.py' for correct file access. Also, added 'jinja2' to the 'requirements.txt' file ensuring the required package is installed during setup." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/air_purifier_api$status_observe.coverage" NAME="status_observe Coverage Results" MODIFIED="1720288987306" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/air_purifier_api$main.coverage" NAME="main Coverage Results" MODIFIED="1720351589810" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/air_purifier_api$websocket.coverage" NAME="websocket Coverage Results" MODIFIED="1720340990797" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>